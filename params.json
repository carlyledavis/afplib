{"name":"Afplib","tagline":"JAVA Library for reading & writing AFP","body":"### Welcome to AFP Lib\r\nafplib - a JAVA Library for reading &amp; writing AFP (Advanced Function Presentation) Files. See https://en.wikipedia.org/wiki/Advanced_Function_Presentation\r\n\r\nafplib provides a low level API to transform AFP files, i.e. structured fields, triplets, ... into JAVA objects and vice versa. To make use of it you need to know MO:DCA (see http://afpcinc.org/wp-content/uploads/2014/04/modca08.pdf). afplib is build on top of EMF (Eclipse Modeling Framework) - http://www.eclipse.org/modeling/emf/\r\n\r\n### Quickstart\r\n\r\nThis is how easy it is to create a brand new (empty) AFP file:\r\n```java\r\npublic static void main(String[] args) {\r\n\t\ttry (AfpOutputStream aout = new AfpOutputStream(new FileOutputStream(\"hello.afp\"))) {\r\n\r\n\t\t\tBDT bdt = AfplibFactory.eINSTANCE.createBDT();\r\n\t\t\tbdt.setDocName(\"HELLOWLD\");\r\n\t\t\tComment comment = AfplibFactory.eINSTANCE.createComment();\r\n\t\t\tcomment.setComment(\"My first AFPLib Program\");\r\n\t\t\tbdt.getTriplets().add(comment);\r\n\t\t\t\r\n\t\t\taout.writeStructuredField(bdt);\r\n\r\n\t\t\tEDT edt = AfplibFactory.eINSTANCE.createEDT();\r\n\t\t\tedt.setDocName(\"HELLOWLD\");\r\n\t\t\taout.writeStructuredField(edt);\r\n\t\t\t\r\n\t\t} catch (IOException e) {\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\t}\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}